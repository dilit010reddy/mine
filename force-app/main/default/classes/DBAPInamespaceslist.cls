//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.
public class DBAPInamespaceslist {

    public List<Namespaces> namespaces {get;set;} 
	public String cursor {get;set;} 
	public Boolean has_more {get;set;} 

    public DBAPInamespaceslist() {
		this.namespaces = new list<Namespaces>(); 
	    this.cursor = ''; 
	    this.has_more = false;
	}

	public class Namespaces {
		public String name {get;set;} 
		public String namespace_id {get;set;} 
		public Namespace_type namespace_type {get;set;} 
        public String team_member_id {get;set;}
        
        public Namespaces(){
            this.name = '';
            this.namespace_id = '';
            this.namespace_type = new Namespace_type();
            this.team_member_id = '';
        }

		public Namespaces(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'name') {
							name = parser.getText();
						} else if (text == 'namespace_id') {
							namespace_id = parser.getText();
						} else if (text == 'namespace_type') {
							namespace_type = new Namespace_type(parser);
						} else if (text == 'team_member_id') {
							team_member_id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Namespaces consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	


	public DBAPInamespaceslist(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'namespaces') {
						namespaces = arrayOfNamespaces(parser);
					} else if (text == 'cursor') {
						cursor = parser.getText();
					} else if (text == 'has_more') {
						has_more = parser.getBooleanValue();
					} else {
						System.debug(LoggingLevel.WARN, 'DBAPInamespaceslist consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Namespace_type {
        public String x_tag {get;set;} // in json: .tag
        
        public Namespace_type(){
            this.x_tag = '';
        }

		public Namespace_type(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == '.tag') {
							x_tag = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Namespace_type consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static DBAPInamespaceslist parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new DBAPInamespaceslist(parser);
    }
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<Namespaces> arrayOfNamespaces(System.JSONParser p) {
        List<Namespaces> res = new List<Namespaces>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Namespaces(p));
        }
        return res;
    }
}